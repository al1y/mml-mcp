import type { MMLElements } from "../types.js"

/**
 * MML elements and their attributes
 * Complete reference for all supported MML 3D elements
 */
export const MML_ELEMENTS: MMLElements = {
  "m-cube": {
    description: "3D cube primitive that can be colored and positioned",
    attributes: {
      color: "Color value (e.g., 'red', '#FF0000', 'rgb(255,0,0)')",
      x: "Position along X-axis in meters",
      y: "Position along Y-axis in meters",
      z: "Position along Z-axis in meters",
      rx: "Rotation around X-axis in degrees",
      ry: "Rotation around Y-axis in degrees",
      rz: "Rotation around Z-axis in degrees",
      sx: "Scale along X-axis",
      sy: "Scale along Y-axis",
      sz: "Scale along Z-axis",
      opacity: "Opacity from 0 (transparent) to 1 (opaque)",
      visible: "Whether element is visible (true/false)",
      collide: "Whether object participates in collision detection",
      onclick: "Script expression executed when clicked",
      id: "Unique identifier for the element",
    },
  },
  "m-sphere": {
    description: "3D sphere primitive that can be colored and positioned",
    attributes: {
      radius: "Radius of the sphere in meters (default: 0.5)",
      color: "Color value",
      x: "Position along X-axis in meters",
      y: "Position along Y-axis in meters",
      z: "Position along Z-axis in meters",
      rx: "Rotation around X-axis in degrees",
      ry: "Rotation around Y-axis in degrees",
      rz: "Rotation around Z-axis in degrees",
      opacity: "Opacity from 0 to 1",
      visible: "Whether element is visible",
      collide: "Whether object participates in collision detection",
      onclick: "Script expression executed when clicked",
      id: "Unique identifier for the element",
    },
  },
  "m-cylinder": {
    description: "3D cylinder primitive that can be colored and positioned",
    attributes: {
      radius: "Radius of the cylinder base in meters",
      height: "Height of the cylinder in meters",
      color: "Color value",
      x: "Position along X-axis in meters",
      y: "Position along Y-axis in meters",
      z: "Position along Z-axis in meters",
      rx: "Rotation around X-axis in degrees",
      ry: "Rotation around Y-axis in degrees",
      rz: "Rotation around Z-axis in degrees",
      opacity: "Opacity from 0 to 1",
      visible: "Whether element is visible",
      collide: "Whether object participates in collision detection",
      onclick: "Script expression executed when clicked",
      id: "Unique identifier for the element",
    },
  },
  "m-model": {
    description:
      "3D model element for loading GLB, GLTF, OBJ, and other 3D model formats",
    attributes: {
      src: "URL or path to the 3D model file",
      x: "Position along X-axis in meters",
      y: "Position along Y-axis in meters",
      z: "Position along Z-axis in meters",
      rx: "Rotation around X-axis in degrees",
      ry: "Rotation around Y-axis in degrees",
      rz: "Rotation around Z-axis in degrees",
      sx: "Scale along X-axis",
      sy: "Scale along Y-axis",
      sz: "Scale along Z-axis",
      visible: "Whether element is visible",
      collide: "Whether object participates in collision detection",
      onclick: "Script expression executed when clicked",
      id: "Unique identifier for the element",
    },
  },
  "m-group": {
    description:
      "Container element that groups other MML elements for collective transformation",
    attributes: {
      x: "Position along X-axis in meters",
      y: "Position along Y-axis in meters",
      z: "Position along Z-axis in meters",
      rx: "Rotation around X-axis in degrees",
      ry: "Rotation around Y-axis in degrees",
      rz: "Rotation around Z-axis in degrees",
      sx: "Scale along X-axis",
      sy: "Scale along Y-axis",
      sz: "Scale along Z-axis",
      visible: "Whether element is visible",
      id: "Unique identifier for the element",
    },
  },
  "m-light": {
    description:
      "Light source element supporting various types like point, spotlight, directional",
    attributes: {
      type: "Light type: 'point', 'spotlight', 'directional'",
      color: "Light color value",
      intensity: "Light intensity value in candela (cd). Default: 200",
      x: "Position along X-axis in meters",
      y: "Position along Y-axis in meters",
      z: "Position along Z-axis in meters",
      rx: "Rotation around X-axis in degrees",
      ry: "Rotation around Y-axis in degrees",
      rz: "Rotation around Z-axis in degrees",
      visible: "Whether light is active",
      id: "Unique identifier for the element",
    },
  },
  "m-character": {
    description:
      "3D character element that can contain other models for composable avatars",
    attributes: {
      src: "URL or path to the character model file",
      x: "Position along X-axis in meters",
      y: "Position along Y-axis in meters",
      z: "Position along Z-axis in meters",
      rx: "Rotation around X-axis in degrees",
      ry: "Rotation around Y-axis in degrees",
      rz: "Rotation around Z-axis in degrees",
      sx: "Scale along X-axis",
      sy: "Scale along Y-axis",
      sz: "Scale along Z-axis",
      visible: "Whether character is visible",
      id: "Unique identifier for the element",
    },
  },
  "m-video": {
    description: "Video element for displaying video content in 3D space",
    attributes: {
      src: "URL or path to the video file",
      width: "Width of the video plane in meters",
      height: "Height of the video plane in meters",
      x: "Position along X-axis in meters",
      y: "Position along Y-axis in meters",
      z: "Position along Z-axis in meters",
      rx: "Rotation around X-axis in degrees",
      ry: "Rotation around Y-axis in degrees",
      rz: "Rotation around Z-axis in degrees",
      loop: "Whether video should loop (true/false)",
      autoplay: "Whether video should autoplay (true/false)",
      onclick: "Script expression executed when clicked",
      id: "Unique identifier for the element",
    },
  },
  "m-audio": {
    description: "Audio element for spatial audio in 3D scenes",
    attributes: {
      src: "URL or path to the audio file",
      x: "Position along X-axis in meters",
      y: "Position along Y-axis in meters",
      z: "Position along Z-axis in meters",
      loop: "Whether audio should loop (true/false)",
      autoplay: "Whether audio should autoplay (true/false)",
      volume: "Audio volume from 0 to 1",
      id: "Unique identifier for the element",
    },
  },
  "m-label": {
    description: "Text label element for displaying text in 3D space",
    attributes: {
      text: "Text content to display",
      color: "Text color value",
      "font-size": "Font size in pixels",
      width: "Width of the text plane in meters",
      height: "Height of the text plane in meters",
      x: "Position along X-axis in meters",
      y: "Position along Y-axis in meters",
      z: "Position along Z-axis in meters",
      rx: "Rotation around X-axis in degrees",
      ry: "Rotation around Y-axis in degrees",
      rz: "Rotation around Z-axis in degrees",
      onclick: "Script expression executed when clicked",
      id: "Unique identifier for the element",
    },
  },
}
